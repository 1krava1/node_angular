.container
  .row
    .col-12
      ul.nav.nav-pills.nav-justified.my-4
        li.nav-item( '*ngFor'="let route of routes" )
          a.nav-link(
            '[class.active]'="isCurrentPage(route.link)"
            '[routerLink]'="['/inventory/' + route.link]"
          ) {{route.name | uppercase}}
  .row
    .col-12.col-lg-6
      form.form-row('[formGroup]'="sortingForm" '*ngIf'="!!sortingForm")
        .col-auto
          label.mr-sm-2('for'="search") Search
          input.form-control.mb-2.mr-sm-2#search(
            'type'="search"
            'placeholder'="search"
            'formControlName'="search"
            '(keyup)'="filterInventory()"
          )

        .col-auto
          label('for'="type") Type
          select.form-control.mb-2.mr-sm-2#type('formControlName'="type" '(change)'="filterInventory()")
            option('value'="all") ALL
            option('*ngFor'="let type of types" 'value'="{{type}}") {{ type | uppercase }}

        .col-auto
          label('for'="sorting") Sorting
          select.form-control.mb-2.mr-sm-2#sorting('formControlName'="sorting" '(change)'="sortInventory()")
            option('value'="n") Default
            option('value'="price-asc") Price (low to high)
            option('value'="price-desc") Price (high to low)
            option('value'="name-asc") Name (A to Z)
            option('value'="name-desc") Name (Z to A)

        .col-auto.d-flex.justify-content-center.align-items-end
          label.btn(
            'for'="select-all"
            '[class.btn-success]'="inventory.filtered.length === selectedItems.length"
            '[class.btn-secondary]'="inventory.filtered.length !== selectedItems.length"
          ) Select all
          input#select-all.d-none('type'="checkbox" 'formControlName'="selectAll" '(change)'="selectAll()")
    .col-12.col-lg-3
      .d-flex.flex-column.justify-content-end.h-100
        h5 Selected items
    .col-12.col-lg-3
      .d-flex.flex-column.justify-content-end.h-100
        h5 Checkout
  .row
    .col-12.col-lg-6
      .d-flex.flex-wrap.mb-2
        .item-wrapper(
          '*ngFor'="let item of inventory.filtered.slice( (inventory.pages.current-1)*inventory.pages.itemsPerPage, inventory.pages.current*inventory.pages.itemsPerPage )"
        )
          button.btn.btn-link.d-block.item(
            '[class.selected]'="isItemSelected(item)"
            '(click)'="toggleItemInTrade(item)"
            'style'="background-size: cover;"
            '[style.background-image]'="sanitizeStyle(item.image)"
            '[disabled]'="!item.tradable || !item.price"
          )
            .item-content
              p.mb-0.price {{item.price / 100 | currency: 'USD'}}
            .hover-content
              h6.mb-0.small {{item.name}}
        .item-wrapper(
          '*ngIf'="inventory.pages.current === inventory.pages.total"
        )
          .btn.btn-link.disabled.item
            .item-content
              h6.mb-0.px-1.small Not tradable items
              h6.mb-0.small {{inventory.notTradable}}
        .item-wrapper(
          '*ngFor'="let key of inventory.emptySlots"
        )
          .btn.btn-link.disabled.item
            .item-content
      .d-flex
        nav('aria-label'="Page navigation example")
          ul.pagination
            li.page-item
              button.page-link('type'="button" 'aria-label'="Previous" '(click)'="prevPage()")
                span('aria-hidden'="true") &laquo;
                span.sr-only Previous
            li.page-item
              button.page-link.disabled {{inventory.pages.current}} / {{inventory.pages.total}}
            li.page-item
              button.page-link('type'="button" 'aria-label'="Next" '(click)'="nextPage()")
                span('aria-hidden'="true") &raquo;
                span.sr-only Next
    .col-12.col-lg-3

      .card.mb-4( '*ngIf'="!!currentItem" )
        img.card-img-top(
          '[src]'="currentItem.image"
          '[alt]'="currentItem.name"
        )
        .card-body
          h5.card-title('[innerHTML]'="currentItem.marketHashName")
          .card-text
            .row.mb-1
              .col-12.col-sm-6 marketable: {{currentItem.marketable}}
              .col-12.col-sm-6 tradeable: {{currentItem.tradable}}
            .row.mb-1
              .col-12.col-sm-6 type: {{currentItem.type.toLowerCase().replace('csgo', '').replace('type', '').replace('_', ' ').replace('_', ' ').trim()}}
              .col-12.col-sm-6 price: {{currentItem.price / 100 | currency: 'USD'}}
          button.btn.btn-primary(
            '[class.btn-primary]'="!isItemSelected(currentItem)"
            '[class.btn-danger]'="isItemSelected(currentItem)"
            '(click)'="toggleItemInTrade(currentItem)"
            '[innerHTML]'="isItemSelected(currentItem) ? 'Remove from trade' : 'Add to trade'"
          )

      .card.mb-4( '*ngIf'="!!selectedItems.length" )
        .d-flex.flex-wrap
          button.btn.btn-link.p-0(
            '*ngFor'="let item of selectedItems"
            '(click)'="toggleItemInTrade(item)"
            'style'="width: 33.333333%"
          )
            img.card-img-top(
              '[src]'="item.image"
              '[alt]'="item.name"
            )
    .col-12.col-lg-3 
      app-checkout('[sum]'="totalCash()")
      | {{totalCash() | currency: 'USD'}}
